---
layout:     post
title:      "Integra√ß√£o Cont√≠nua com Travis-CI"
subtitle:   "Chegou a hora de ter menos dores de cabe√ßa durante o desenvolvimento do seu app."
date:       2017-03-26 12:00:00
author:     "Fabricio Serralvo"
header-img: "img/serralvo/cover.png"
category:   ios
---

# Integra√ß√£o Cont√≠nua com Travis¬†CI
Integra√ß√£o Cont√≠nua √©, em outras palavras, a pr√°tica que busca manter o ambiente de desenvolvimento em pleno funcionamento ap√≥s itera√ß√µes feitas pelos devs do projeto. Para que isso ocorra, √© necess√°rio que a cada altera√ß√£o no reposit√≥rio, alguns itens do projeto sejam verificados, como a gera√ß√£o da _build_ e execu√ß√£o de testes, por exemplo.

Voc√™ pode ler um pouco mais sobre o assunto [aqui (conte√∫do em ingl√™s)](https://martinfowler.com/articles/continuousIntegration.html).

# Travis CI

O Travis CI √© um servi√ßo dedicado exclusivamente √† integra√ß√£o cont√≠nua. Ele opera integrado ao GitHub, assim, algumas tarefas s√£o simplificadas, como a automa√ß√£o da obten√ß√£o do _source_ do projeto. Devido √† integra√ß√£o, √© necess√°rio que seu projeto esteja hospedado no GitHub.

O uso do Travis para projetos _open source_ √© gratuito üéâ (isso sem d√∫vida ajudou a populariz√°-lo). Para utiliz√°-lo em projetos privados voc√™ ter√° que desembolsar alguns d√≥lares, o valor mensal* vai de $69 no plano _Bootstrap_ at√© $489 üí∏ na op√ß√£o _Premium_.

Para come√ßar a utilizar basta acessar [travis-ci.org](https://travis-ci.org) para projetos _open source_ ou [travis-ci.com](https://travis-ci.com) para projetos privados. O processo de _sign-up_ √© bastante simples.

\* Informa√ß√µes de mar√ßo, 2017

# Benef√≠cios

Entre os benef√≠cios do uso do Travis (ou qualquer outra solu√ß√£o de integra√ß√£o cont√≠nua) destaco a velocidade em que os problemas corriqueiros s√£o encontrados, afinal, quanto mais r√°pido descobrirmos alguma adversidade, menor a chance de uma dor de cabe√ßa das grandes.¬†

Outro ponto interessante √© a integra√ß√£o realizada pelo Travis com o GitHub, onde a cada _commit_ ou _pull request_, o Travis executa seu _job_ e marca visualmente se o ambiente foi comprometido ou n√£o. Al√©m tamb√©m da gera√ß√£o dos tradicionais _badges_ informando o _status_ do projeto.

![]({{ site.baseurl }}/img/serralvo/commits-travis.png)

_Marca√ß√£o visual do status da build_

# Hora do¬†Show

Para exemplificar o funcionamento do Travis criei um projeto para iOS em Swift 3. Nele, adicionei uma depend√™ncia que servir√° para demonstrar como obter as bibliotecas ou frameworks do projeto.

Esse projeto gerou tr√™s √≠tens para explorarmos:¬†

* Ser√° necess√°rio gerenciar as depend√™ncias do projeto‚Ää‚Äî‚Ää sim, √© isso que voc√™ est√° pensando: CocoaPods.
* Execu√ß√£o da _build_.
* Por fim, notificaremos o time sobre o _status_ do projeto.

# Arquivo¬†.travis.yml

Para que essas tarefas listadas acima funcionem, n√≥s precisaremos criar um arquivo que fornecer√° instru√ß√µes para o Travis. A√≠ √© que entra o¬†`.travis.yml`.

Antes de come√ßarmos a escrever o arquivo de configura√ß√£o, precisamos entender como funciona o ciclo de vida do processo de _build_ do Travis:

O Travis divide a execu√ß√£o do _job_ em duas etapas, a primeira delas √© respons√°vel pela atualiza√ß√£o das depend√™ncias, seja do projeto, ou do ambiente. A segunda etapa √© voltada para a execu√ß√£o da _build_ e outras tarefas relacionadas, como _tests_, _reports_ e _deploy_. Nessas etapas podemos detectar eventos do ciclo de vida e incluir a√ß√µes de acordo com a necessidade do projeto.

Para come√ßarmos, o primeiro passo √© realizar o cadastro no Travis. Para reposit√≥rios p√∫blicos ou privados, o funcionamento ser√° o mesmo.

![]({{ site.baseurl }}/img/serralvo/travis-ci-org.png)

O pr√≥ximo passo √© "ativar" o Travis para o reposit√≥rio desejado. Feito isso, no pr√≥ximo _commit_ ou _pull request_, o _job_ ser√° executado.

![]({{ site.baseurl }}/img/serralvo/start-travis.png)

Ap√≥s o cadastro chegou a hora de criar o arquivo¬†*.travis.yml* na raiz do reposit√≥rio. Feito isso, vamos incluir duas linhas: A primeira √© usada para definir a linguagem do projeto (que √© um valor obrigat√≥rio). No caso adicionaremos `objective-c`. A segunda representa a imagem que ser√° usada para fazer a build do projeto, no caso, adicionaremos `xcode8.1`. Veja abaixo:

~~~
language: objective-c
osx_image: xcode8.1
~~~

Agora voc√™ pode estar assim: ü§î

U√©, `objective-c`?! Mas o projeto n√£o est√° escrito em Swift? Sim, isso mesmo, at√© o momento o Travis utiliza o valor `objective-c` para Swift e tamb√©m para Objective-C.

## Baixando as depend√™ncias

Se voc√™ j√° usou CocoaPods ao menos uma vez, sabe que basta executar `pod install` para obter as depend√™ncias do projeto. No ambiente do Travis isso √© um pouco diferente: se o `Podfile` estiver na raiz do projeto, o Travis far√° o _fetch_ automaticamente, caso contr√°rio, basta indicar no `.travis.yml` qual o local de tal arquivo:

~~~
podfile: path/to/Podfile
~~~

Se o seu projeto usa outro gerenciador de depend√™ncias, √© poss√≠vel fazer _override_ da etapa de `install` para realizar a instala√ß√£o de acordo com sua necessidade:

~~~
install: sh dependencies.sh
~~~

## Build e Sucesso

Ap√≥s obter as depend√™ncias do projeto, basta apenas configurar alguns par√¢metros para a execu√ß√£o da _build_. Esses par√¢metros envolvem alguns √≠tens necess√°rios para continuar o processo. S√£o eles:

* _Path_ do `xcworkspace` ou `xcproject`.
* Algum _scheme_ com a op√ß√£o _shared_ ativada ([saiba mais aqui](http://help.apple.com/xcode/mac/8.0/#/dev5426ddfcf)).
* SDK que ser√° usado (no caso estamos usando `iphonesimulator`).

Conhecendo tais par√¢metros √© hora de realizar a _build_ do projeto, para isso, vamos adicionar na etapa `script` a chamada do `xcodebuild`.

~~~
script:
  - xcodebuild -workspace DemoTravisCI.xcworkspace -scheme 'DemoTravisCI' -sdk iphonesimulator build
~~~

Sendo assim, no momento o arquivo `.travis.yml` possui o seguinte conte√∫do:

~~~
language: objective-c
osx_image: xcode8.1

script:
  - xcodebuild -workspace DemoTravisCI.xcworkspace  -scheme DemoTravisCI -sdk iphonesimulator build
~~~

## Notifica√ß√µes

Para detectar poss√≠veis problemas com o projeto, √© interessante compartilhar o status da _build_ com o time a cada itera√ß√£o. O Travis prov√™ diversas op√ß√µes para notifica√ß√µes, come√ßando pelo envio de e-mails e abrindo um leque de possibilidades gra√ßas √†s integra√ß√µes. No nosso caso, vamos ser avisados via Slack üì¢.

Para isso, o primeiro passo √© adicionar uma [nova integra√ß√£o ao Slack](https://my.slack.com/services/new/travis). Ap√≥s selecionar o time e as demais op√ß√µes, na pr√≥pria p√°gina do Slack voc√™ encontrar√° o conte√∫do que deve ser adicionado ao seu arquivo de configura√ß√£o.

Conclu√≠do tal passo, vamos incluir a chave `notifications` no arquivo `.travis.yml`:

~~~
notifications:
  slack: yourteam:G1P621hDDwEH3pXeCcJpck8i
~~~

Importante: Caso seu projeto seja aberto, √© recomendado criptografar a chave. Esse √© um processo bastante simples e voc√™ pode saber mais [aqui](https://docs.travis-ci.com/user/encryption-keys/).


# Considera√ß√µes Finais

Ferramentas de integra√ß√£o cont√≠nua s√£o realidade no mercado e fazem parte da rotina de qualquer grande projeto de software. Algumas demandam maior esfor√ßo para que sejam configuradas (principalmente ferramentas _self-hosted_), outras n√£o, como √© o caso do Travis, onde basta um arquivo de marca√ß√£o para que a m√°gica aconte√ßa.

Se voc√™ se interessou pelo assunto e deseja implantar tal processo em seus projetos, e por alguma limita√ß√£o n√£o ir√° conseguir utilizar o Travis, saiba que existem diversas op√ß√µes, como Jenkins, Xcode Server, CircleCI, entre outras.

Para finalizar, Integra√ß√£o Cont√≠nua √© um dos pilares do desenvolvimento √°gil, e podemos considerar que tamb√©m √© um passo para a Entrega Cont√≠nua, mas isso √© assunto para outro artigo üôÉ.

Um obrigado especial ao [Roger Oba](https://github.com/rogerluan) e tamb√©m ao [C√≠cero Duarte](https://github.com/ciceroduarte).

### Referencias:

* [Imagem da Capa - Relax by Clem Onojeghuo](https://unsplash.com/photos/zlABb6Gke24)
* [Getting started](https://docs.travis-ci.com/user/getting-started/)
* [Building an Objective-C Project](https://docs.travis-ci.com/user/languages/objective-c/)
* [Notifications](https://docs.travis-ci.com/user/notifications/)

